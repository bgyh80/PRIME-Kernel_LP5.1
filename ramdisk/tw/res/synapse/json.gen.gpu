#!/res/bin/busybox sh

cat << CTAG
{
    name:GPU,
    elements:[
        { SPane:{
                title:"GPU state"
        }},
        { SLiveLabel:{
                title:"GPU live frequency",
                action:"live gpu"
        }},
	{ SLiveLabel:{
                title:"Time in States",
		refresh:2500,
		action:"live LiveGPUTime 0 8"
	}},
    { SDescription:{ description:"" }},
	{ SPane:{
                title:"GPU MAX/MIN Clock Control"
        }},
	{ SSeekBar:{
		title:"GPU MAX Freq",
		description:" Set Maximum GPU Freq. Stock is 600MHz.",
                default:`cat /sys/devices/14ac0000.mali/max_clock`,
		action:"generic /sys/devices/14ac0000.mali/max_clock",
		values:{`for FREQ in $(cat /sys/devices/14ac0000.mali/volt_table|$BB cut -c 1-3); do
                   echo "$FREQ:\"${FREQ} MHz\","
                 done`}
	}},
    { SDescription:{ description:"" }},
	{ SSeekBar:{
		title:"GPU MIN Freq",
		description:" Set Minimum GPU Freq. Stock is 160MHz.",
                default:`cat /sys/devices/14ac0000.mali/min_clock`,
		action:"generic /sys/devices/14ac0000.mali/min_clock",
		values:{`for FREQ in $(cat /sys/devices/14ac0000.mali/volt_table|$BB cut -c 1-3); do
                   echo "$FREQ:\"${FREQ} MHz\","
                 done`}
	}},
    { SDescription:{ description:"" }},
	{ SPane:{
		title:"GPU Governor",
                description:" Booster may give improved graphic & benchmark performance at the expense of battery."
    }},
    { SDescription:{ description:"" }},
    { SOptionList:{
            default:`echo $($STR/actions/gpu_governor gpu_gov)`,
            action:"gpu_governor gpu_gov",
            values:[Default, Interactive, Static, Booster]
    }},
    { SPane:{
            title:"GPU Interactive governor tunables"
    }},
    { SDescription:{ description:"" }},
	{ SSeekBar:{
                title:"GPU highspeed clock",
                description:" Boost the minimum freqency the GPU scales up to.\n",
                default:`cat /sys/devices/14ac0000.mali/highspeed_clock`,
                unit:"MHz",
                action:"generic /sys/devices/14ac0000.mali/highspeed_clock",
                values:{
`
                        while read FREQ VOLT; do
                                        LABEL=$(/res/bin/busybox expr $FREQ)
                                echo "$FREQ:\"${LABEL}MHz\", "
                        done < /sys/devices/14ac0000.mali/volt_table
`
                }
	}},
    { SDescription:{ description:"" }},
	{ SSeekBar:{
                title:"GPU highspeed load",
                description:" Jump the minimum frequency level to highspeed_clock when the GPU utilization over this value.\n",
                default:`cat /sys/devices/14ac0000.mali/highspeed_load`,
				max:100, min:1, unit:"%", step:1,
                action:"generic /sys/devices/14ac0000.mali/highspeed_load",
	}},
    { SDescription:{ description:"" }},
	{ SSeekBar:{
                title:"GPU highspeed delay",
                description:" Jump the minimum frequency level to highspeed_clock when the GPU utilization over highspeed_load and over this delayed value.\n",
                default:`cat /sys/devices/14ac0000.mali/highspeed_delay`,
                max:100, min:0, unit:"ms", step:1,
                action:"generic /sys/devices/14ac0000.mali/highspeed_delay",
	}},
    { SDescription:{ description:"" }},

    { SPane:{
            title:"GPU power policy control",
            description:" COARSE DEMAND power policy is to control only external power (PMU for G3D). It is better at saving power and performance. COARSE DEMAND turns off GPU power in case of being no job for 100ms and turns it on in case of incomming first job on the state of GPU off. Default is coarse_demand."
    }},
	{ SDescription:{
		description:""
	}},
	{ SDescription:{
		description:" DEMAND power policy controls internal core power when processing a job, so it can be controlled frequently rendering one frame. This frequent control affect job utilization. So power consumption on DVFS with demand power policy is higher than coarse_demand."
	}},
	{ SDescription:{
		description:""
	}},
        { SOptionList:{
                title:"Mali power policy control",
                default:`echo $(/res/synapse/actions/bracket-option /sys/devices/14ac0000.mali/power_policy)`,
                action:"bracket-option /sys/devices/14ac0000.mali/power_policy",
                values:[
`
                        for POLICY in \`cat /sys/devices/14ac0000.mali/power_policy | $BB sed -e 's/\]//;s/\[//'\`; do
                          echo "\"$POLICY\","
                        done
`
                ]
        }},
	{ SDescription:{
		description:""
	}},
	{ SPane:{
		title:"GPU voltage control",
		description:" Decreasing voltage will lower power consumption of the GPU. Increasing it on overclocked frequencies improves stability. Too low voltage may cause instabilities and freezes.\n\n경고! 전압조절은 시스템 불안정과 기기 손상의 위험이 있습니다.\n전압을 낮추면 기기에 공급되는 전력이 감소합니다.\n오버클럭 시 안정성을 위해서는 전압을 올려야합니다.\n낮은 전압 설정은 시스템을 불안정과 프리징을 유발할 수 있으며, 성능(벤치마크 점수) 저하의 원인이 됩니다.",
        }},
	{ SDescription:{
		description:""
	}},
`
while read FREQ VOLT; do
        echo '{ SSeekBar:{'
                echo 'title:"'$FREQ' MHz", default:'$VOLT', '
                echo 'action:"gpuvolt '${FREQ}'", unit:" mV", weight:0.001, min:700000, max:1187500, step:6250 }}, '
done < /sys/devices/14ac0000.mali/volt_table
`
	{ SDescription:{
		description:""
	}},
    ]
}
CTAG
